{
  "name": "Insert Workflows",
  "nodes": [
    {
      "parameters": {
        "assignments": {
          "assignments": [
            {
              "id": "d0ee4497-e902-40c5-8938-811bb206f6c8",
              "name": "workflow-files",
              "value": "=[\n    {\n      \"file_type\": \"extract-text\",\n      \"file_url\": \"https://raw.githubusercontent.com/theaiautomators/insights-lm-public/main/n8n/InsightsLM___Extract_Text.json\"\n    },\n    {\n      \"file_type\": \"generate-notebook-details\",\n      \"file_url\": \"https://raw.githubusercontent.com/theaiautomators/insights-lm-public/main/n8n/InsightsLM___Generate_Notebook_Details.json\"\n    },\n    {\n      \"file_type\": \"upsert-to-vector-store\",\n      \"file_url\": \"https://raw.githubusercontent.com/theaiautomators/insights-lm-public/main/n8n/InsightsLM___Upsert_to_Vector_Store.json\"\n    },\n    {\n      \"file_type\": \"process-additional-sources\",\n      \"file_url\": \"https://raw.githubusercontent.com/theaiautomators/insights-lm-public/main/n8n/InsightsLM___Process_Additional_Sources.json\"\n    },\n    {\n      \"file_type\": \"chat\",\n      \"file_url\": \"https://raw.githubusercontent.com/theaiautomators/insights-lm-public/main/n8n/InsightsLM___Chat.json\"\n    },\n    {\n      \"file_type\": \"podcast-generation\",\n      \"file_url\": \"https://raw.githubusercontent.com/theaiautomators/insights-lm-public/main/n8n/InsightsLM___Podcast_Generation.json\"\n    }\n  ]",
              "type": "array"
            }
          ]
        },
        "options": {}
      },
      "type": "n8n-nodes-base.set",
      "typeVersion": 3.4,
      "position": [
        736,
        768
      ],
      "id": "2b012a37-b39f-4f71-a3ed-bab521719cd8",
      "name": "Workflow File URLs to Download"
    },
    {
      "parameters": {
        "fieldToSplitOut": "[\"workflow-files\"]",
        "options": {}
      },
      "type": "n8n-nodes-base.splitOut",
      "typeVersion": 1,
      "position": [
        960,
        768
      ],
      "id": "7aae8e82-9047-4f8a-9763-48599d93e148",
      "name": "Split Out"
    },
    {
      "parameters": {
        "options": {}
      },
      "type": "n8n-nodes-base.splitInBatches",
      "typeVersion": 3,
      "position": [
        1184,
        768
      ],
      "id": "8dc1883a-8df1-4d96-8d02-b1da6761c6d4",
      "name": "Loop Over Items"
    },
    {
      "parameters": {
        "url": "={{ $json.file_url }}?cacheBust={{ $now.toISO() }}",
        "options": {}
      },
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.2,
      "position": [
        1456,
        304
      ],
      "id": "72c7a5ab-d7d9-4c86-ba83-c3a3270d2776",
      "name": "Download Workflow File"
    },
    {
      "parameters": {
        "jsCode": "// Loop over each input item passed to this node\nfor (const item of $input.all()) {\n  // Convert the JSON object of the current item into a string\n  let dataString = JSON.stringify(item.json);\n\n  // Perform the find-and-replace operations on the string version of the JSON.\n  // The 'g' flag in the regular expression ensures all instances are replaced.\n  const updatedString = dataString\n    .replace(/39evQ95L86jhtb3I/g, $('Enter User Values').first().json['Enter the n8n Custom Webhook Header Auth ID'])\n    .replace(/yfvmutoxmibqzvyklggr/g, $('Enter User Values').first().json['Enter Supabase Project ID'])\n    .replace(/OeYUddl4OaIohMCC/g, $('Enter User Values').first().json['Enter your n8n Supabase Credential ID'])\n    .replace(/hNalDChhNUDtYG7T/g, $('Enter User Values').first().json['Enter the n8n OpenAI Credential ID'])\n    .replace(/PzC8XiX0nzmyH9AA/g, $('Enter User Values').first().json['Enter the n8n Google Gemini (PaLM) Credential ID'])\n    .replace(/OuPBM6n0hyobX8h6/g, $('Enter User Values').first().json['Enter the n8n Postgres Credential ID']);\n\n  // Convert the modified string back into a JSON object and\n  // overwrite the original JSON data of the item.\n  item.json = JSON.parse(updatedString);\n}\n\n// Return all the modified items to be passed to the next node in the workflow.\nreturn $input.all();"
      },
      "type": "n8n-nodes-base.code",
      "typeVersion": 2,
      "position": [
        1680,
        304
      ],
      "id": "a738d150-ae59-4968-8e5d-ca0ae4f5fabd",
      "name": "Find and Replace"
    },
    {
      "parameters": {
        "rules": {
          "values": [
            {
              "conditions": {
                "options": {
                  "caseSensitive": true,
                  "leftValue": "",
                  "typeValidation": "loose",
                  "version": 2
                },
                "conditions": [
                  {
                    "leftValue": "={{ $('Loop Over Items').item.json.file_type }}",
                    "rightValue": "generate-notebook-details",
                    "operator": {
                      "type": "string",
                      "operation": "equals"
                    },
                    "id": "304285e6-dee5-4ff7-adbd-6ee937ae58f4"
                  }
                ],
                "combinator": "and"
              }
            },
            {
              "conditions": {
                "options": {
                  "caseSensitive": true,
                  "leftValue": "",
                  "typeValidation": "loose",
                  "version": 2
                },
                "conditions": [
                  {
                    "id": "5b066c3c-356a-4570-8eac-641bd3d515e1",
                    "leftValue": "={{ $('Loop Over Items').item.json.file_type }}",
                    "rightValue": "upsert-to-vector-store",
                    "operator": {
                      "type": "string",
                      "operation": "equals",
                      "name": "filter.operator.equals"
                    }
                  }
                ],
                "combinator": "and"
              }
            },
            {
              "conditions": {
                "options": {
                  "caseSensitive": true,
                  "leftValue": "",
                  "typeValidation": "loose",
                  "version": 2
                },
                "conditions": [
                  {
                    "id": "743b9cbe-e88b-45c1-8d2c-e372995f6c49",
                    "leftValue": "={{ $('Loop Over Items').item.json.file_type }}",
                    "rightValue": "process-additional-sources",
                    "operator": {
                      "type": "string",
                      "operation": "equals",
                      "name": "filter.operator.equals"
                    }
                  }
                ],
                "combinator": "and"
              }
            }
          ]
        },
        "looseTypeValidation": true,
        "options": {
          "fallbackOutput": "extra"
        }
      },
      "type": "n8n-nodes-base.switch",
      "typeVersion": 3.2,
      "position": [
        1904,
        288
      ],
      "id": "cbf2c57f-395c-4d0b-8464-6d17d53e27f6",
      "name": "Switch"
    },
    {
      "parameters": {
        "jsCode": "// Loop over each input item passed to this node\nfor (const item of $input.all()) {\n  // Convert the JSON object of the current item into a string\n  let dataString = JSON.stringify(item.json);\n\n  // Perform the find-and-replace operations on the string version of the JSON.\n  // The 'g' flag in the regular expression ensures all instances are replaced.\n  const updatedString = dataString\n    .replace(/AzZ5a2zCGU1O3MRV/g, $('n8n').first(0,0).json.id);\n\n  // Convert the modified string back into a JSON object and\n  // overwrite the original JSON data of the item.\n  item.json = JSON.parse(updatedString);\n}\n\n// Return all the modified items to be passed to the next node in the workflow.\nreturn $input.all();"
      },
      "type": "n8n-nodes-base.code",
      "typeVersion": 2,
      "position": [
        2192,
        64
      ],
      "id": "90549b51-b6f4-4285-b2f4-8809f2a951d0",
      "name": "Update Extract Text Workflow Reference"
    },
    {
      "parameters": {
        "jsCode": "// Loop over each input item passed to this node\nfor (const item of $input.all()) {\n  // Convert the JSON object of the current item into a string\n  let dataString = JSON.stringify(item.json);\n\n  // Perform the find-and-replace operations on the string version of the JSON.\n  // The 'g' flag in the regular expression ensures all instances are replaced.\n  const updatedString = dataString\n    .replace(/IQcdcedwXg2w3AuW/g, $('n8n').first(0,2).json.id);\n\n  // Convert the modified string back into a JSON object and\n  // overwrite the original JSON data of the item.\n  item.json = JSON.parse(updatedString);\n}\n\n// Return all the modified items to be passed to the next node in the workflow.\nreturn $input.all();"
      },
      "type": "n8n-nodes-base.code",
      "typeVersion": 2,
      "position": [
        2192,
        240
      ],
      "id": "de3bde05-483d-41f9-845a-d26de52d7e7b",
      "name": "Update Vector Upsert Workflow Reference"
    },
    {
      "parameters": {
        "operation": "create",
        "workflowObject": "={{ $json.data }}",
        "requestOptions": {}
      },
      "type": "n8n-nodes-base.n8n",
      "typeVersion": 1,
      "position": [
        2624,
        432
      ],
      "id": "1044f6c6-28ea-4621-a608-6ebb600cb7bd",
      "name": "n8n",
      "credentials": {
        "n8nApi": {
          "id": "6Z1CqbCusfUzmkoF",
          "name": "n8n account"
        }
      }
    },
    {
      "parameters": {
        "assignments": {
          "assignments": [
            {
              "id": "866c90b8-42da-4178-93ce-26665d38d5ee",
              "name": "Enter Supabase Project ID",
              "value": "ehqdibhqhevjnknojogm",
              "type": "string"
            },
            {
              "id": "0c78076e-6b86-4521-9f56-53bf537deb7d",
              "name": "Enter your n8n Supabase Credential ID",
              "value": "7GmwvHGWyd47X1M6",
              "type": "string"
            },
            {
              "id": "a08496dd-25cb-4905-81a5-15fe8bb73c87",
              "name": "Enter the n8n Custom Webhook Header Auth ID",
              "value": "gvJYxh53ckvIJCGJ",
              "type": "string"
            },
            {
              "id": "8adb8fb6-9daf-4385-bfce-547e0b982a8e",
              "name": "Enter the n8n Postgres Credential ID",
              "value": "loHyKG67vLMDy8GM",
              "type": "string"
            },
            {
              "id": "a78cb031-db06-4b0f-9edd-50d231ee068f",
              "name": "Enter the n8n Google Gemini (PaLM) Credential ID",
              "value": "0Cl9BqX4cx9pQwrD",
              "type": "string"
            },
            {
              "id": "de05aeff-fa19-4da9-b37d-db62cf8c8b20",
              "name": "Enter the n8n OpenAI Credential ID",
              "value": "vyxVe2RGE1yLgSDx",
              "type": "string"
            },
            {
              "id": "00ac53ef-7d8d-49d6-bc4e-a783ac660ad2",
              "name": "Enter your n8n Base URL (The part before the first single slash)",
              "value": "https://n8n-railway-production-519d.up.railway.app",
              "type": "string"
            }
          ]
        },
        "options": {}
      },
      "type": "n8n-nodes-base.set",
      "typeVersion": 3.4,
      "position": [
        224,
        768
      ],
      "id": "aa6a835a-32d3-4a7c-8140-bec7a78e140f",
      "name": "Enter User Values"
    },
    {
      "parameters": {},
      "type": "n8n-nodes-base.manualTrigger",
      "typeVersion": 1,
      "position": [
        -16,
        768
      ],
      "id": "c6aa9761-df68-40d0-a3ea-41fdbc707524",
      "name": "When clicking ‘Execute workflow’"
    },
    {
      "parameters": {
        "content": "## UPDATE - Add Values\nYou need to fill out all fields here before running this workflow",
        "height": 340,
        "width": 280,
        "color": 6
      },
      "type": "n8n-nodes-base.stickyNote",
      "typeVersion": 1,
      "position": [
        144,
        624
      ],
      "id": "aa85750f-ab8e-47b9-890a-a73afb6dcaa1",
      "name": "Sticky Note"
    },
    {
      "parameters": {
        "content": "## UPDATE - n8n Node\nCreate an API key in your n8n instance and set the credentials in this node\n\nTo create a key click the 3 dots beside your name on the bottom left, then Settings > then n8n API > then Create API Key",
        "height": 420,
        "width": 360,
        "color": 6
      },
      "type": "n8n-nodes-base.stickyNote",
      "typeVersion": 1,
      "position": [
        2496,
        208
      ],
      "id": "1c6ffe85-860c-43f6-81f0-ce2df1e4e74d",
      "name": "Sticky Note1"
    },
    {
      "parameters": {
        "conditions": {
          "options": {
            "caseSensitive": true,
            "leftValue": "",
            "typeValidation": "strict",
            "version": 2
          },
          "conditions": [
            {
              "id": "fdfeb2e5-e42b-4048-a459-c9b09595104d",
              "leftValue": "={{ $json[\"Enter Supabase Project ID\"] }}",
              "rightValue": "",
              "operator": {
                "type": "string",
                "operation": "notEmpty",
                "singleValue": true
              }
            },
            {
              "id": "8abfdbe7-0c09-4453-87c6-ce6a397a45b0",
              "leftValue": "={{ $json[\"Enter your n8n Supabase Credential ID\"] }}",
              "rightValue": "",
              "operator": {
                "type": "string",
                "operation": "notEmpty",
                "singleValue": true
              }
            },
            {
              "id": "4d4af96c-0fcd-4f4d-bcb9-5e0ebc5da5f3",
              "leftValue": "={{ $json[\"Enter the n8n Custom Webhook Header Auth ID\"] }}",
              "rightValue": "",
              "operator": {
                "type": "string",
                "operation": "notEmpty",
                "singleValue": true
              }
            },
            {
              "id": "69dd9550-e36f-4612-8e78-f44331b08164",
              "leftValue": "={{ $json[\"Enter the n8n Postgres Credential ID\"] }}",
              "rightValue": "",
              "operator": {
                "type": "string",
                "operation": "notEmpty",
                "singleValue": true
              }
            },
            {
              "id": "44fe849a-0a5b-4dcd-ab15-7281f5427139",
              "leftValue": "={{ $json[\"Enter the n8n Google Gemini (PaLM) Credential ID\"] }}",
              "rightValue": "",
              "operator": {
                "type": "string",
                "operation": "notEmpty",
                "singleValue": true
              }
            },
            {
              "id": "aeca18f7-7dd0-4bf2-8181-a1e63725e8d6",
              "leftValue": "={{ $json[\"Enter the n8n OpenAI Credential ID\"] }}",
              "rightValue": "",
              "operator": {
                "type": "string",
                "operation": "notEmpty",
                "singleValue": true
              }
            },
            {
              "id": "3dcb028f-5ca4-45c8-8418-4b037adf9a1c",
              "leftValue": "={{ $json[\"Enter your n8n Base URL (The part before the first single slash)\"] }}",
              "rightValue": "",
              "operator": {
                "type": "string",
                "operation": "notEmpty",
                "singleValue": true
              }
            }
          ],
          "combinator": "and"
        },
        "options": {}
      },
      "type": "n8n-nodes-base.if",
      "typeVersion": 2.2,
      "position": [
        448,
        768
      ],
      "id": "65651e62-c2e3-44a3-82d7-b545a3ae3295",
      "name": "Checking Values are Set"
    },
    {
      "parameters": {
        "jsCode": "// This script generates a single, structured output item.\n\n// Use a template literal (backticks) for the multi-line start message.\nconst start_message = `Success. Your n8n Workflows have been set up.\nThe following are the Secrets that need to be created in Supabase`;\n\n// Define the array of secret objects.\n// A placeholder is used for secrets that need a user-defined value.\nconst secrets_to_create = [\n  {\n    \"Key\": \"AUDIO_GENERATION_WEBHOOK_URL\",\n    \"Value\": $('Enter User Values').first().json[\"Enter your n8n Base URL (The part before the first single slash)\"] + \"/webhook/4c4699bc-004b-4ca3-8923-373ddd4a274e\"\n  },\n  {\n    \"Key\": \"NOTEBOOK_CHAT_URL\",\n    \"Value\": $('Enter User Values').first().json[\"Enter your n8n Base URL (The part before the first single slash)\"] + \"/webhook/2fabf43f-6e6e-424b-8e93-9150e9ce7d6c\"\n  },\n  {\n    \"Key\": \"ADDITIONAL_SOURCES_WEBHOOK_URL\",\n    \"Value\": $('Enter User Values').first().json[\"Enter your n8n Base URL (The part before the first single slash)\"] + \"/webhook/670882ea-5c1e-4b50-9f41-4792256af985\"\n  },\n  {\n    \"Key\": \"DOCUMENT_PROCESSING_WEBHOOK_URL\",\n    \"Value\": $('Enter User Values').first().json[\"Enter your n8n Base URL (The part before the first single slash)\"] + \"/webhook/19566c6c-e0a5-4a8f-ba1a-5203c2b663b7\"\n  },\n  {\n    \"Key\": \"NOTEBOOK_GENERATION_URL\",\n    \"Value\": $('Enter User Values').first().json[\"Enter your n8n Base URL (The part before the first single slash)\"] + \"/webhook/0c488f50-8d6a-48a0-b056-5f7cfca9efe2\"\n  },\n  {\n    \"Key\": \"NOTEBOOK_GENERATION_AUTH\",\n    \"Value\": \"Provide the password you created earlier\"\n  },\n  {\n    \"Key\": \"OPENAI_API_KEY\",\n    \"Value\": \"Provide your OpenAI Key\"\n  }\n];\n\nconst end_message = 'Ensure you have FFMPEG installed on this server for the Podcast audio generation to work';\n\n// Return the final payload in the required n8n format (an array of items).\nreturn [\n  {\n    json: {\n      start_message: start_message,\n      supabase_secrets: secrets_to_create,\n      end_message: end_message\n    }\n  }\n];"
      },
      "type": "n8n-nodes-base.code",
      "typeVersion": 2,
      "position": [
        1536,
        832
      ],
      "id": "fd27b25e-82a3-4dd7-a510-08f9eae778fe",
      "name": "Read This After Executing Workflow"
    },
    {
      "parameters": {
        "content": "## READ OUTPUT AFTER SUCCESSFUL EXECUTION\nI output the various Supabase secrets that you need to create in this node",
        "height": 340,
        "width": 340,
        "color": 6
      },
      "type": "n8n-nodes-base.stickyNote",
      "typeVersion": 1,
      "position": [
        1440,
        672
      ],
      "id": "b9960874-b57d-4c6e-ad26-0d203b24d326",
      "name": "Sticky Note3"
    }
  ],
  "pinData": {},
  "connections": {
    "Workflow File URLs to Download": {
      "main": [
        [
          {
            "node": "Split Out",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Split Out": {
      "main": [
        [
          {
            "node": "Loop Over Items",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Loop Over Items": {
      "main": [
        [
          {
            "node": "Read This After Executing Workflow",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "Download Workflow File",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Download Workflow File": {
      "main": [
        [
          {
            "node": "Find and Replace",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Find and Replace": {
      "main": [
        [
          {
            "node": "Switch",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Switch": {
      "main": [
        [
          {
            "node": "Update Extract Text Workflow Reference",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "Update Extract Text Workflow Reference",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "Update Vector Upsert Workflow Reference",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "n8n",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "n8n": {
      "main": [
        [
          {
            "node": "Loop Over Items",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Update Extract Text Workflow Reference": {
      "main": [
        [
          {
            "node": "n8n",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Update Vector Upsert Workflow Reference": {
      "main": [
        [
          {
            "node": "n8n",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Enter User Values": {
      "main": [
        [
          {
            "node": "Checking Values are Set",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "When clicking ‘Execute workflow’": {
      "main": [
        [
          {
            "node": "Enter User Values",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Checking Values are Set": {
      "main": [
        [
          {
            "node": "Workflow File URLs to Download",
            "type": "main",
            "index": 0
          }
        ]
      ]
    }
  },
  "active": false,
  "settings": {
    "executionOrder": "v1"
  },
  "versionId": "c4d2372f-cdd9-44b4-84d9-02c042fc9348",
  "meta": {
    "templateCredsSetupCompleted": true,
    "instanceId": "f5707d3666ba184efe554775a181f51837c332c4fa57af1133598e1ba699e314"
  },
  "id": "FsJ8WeOOgXoxys7z",
  "tags": [
    {
      "createdAt": "2025-07-30T10:33:19.929Z",
      "updatedAt": "2025-07-30T10:33:19.929Z",
      "id": "aHlZOUlVfQPTIx94",
      "name": "TheAIAutomators.com"
    }
  ]
}