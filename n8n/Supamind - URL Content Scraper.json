{
  "name": "Supamind - URL Content Scraper",
  "nodes": [
    {
      "parameters": {
        "method": "POST",
        "url": "https://api.firecrawl.dev/v1/scrape",
        "authentication": "genericCredentialType",
        "genericAuthType": "httpBearerAuth",
        "sendBody": true,
        "specifyBody": "json",
        "jsonBody": "={\n  \"url\": \"{{ $json.url }}\",\n  \"formats\": [\n    \"markdown\"\n  ],\n  \"onlyMainContent\": true,\n  \"waitFor\": 5000\n}",
        "options": {}
      },
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.2,
      "position": [
        0,
        352
      ],
      "id": "0ecf828b-f785-4425-821a-19baf98f78e2",
      "name": "HTTP Request",
      "credentials": {
        "httpHeaderAuth": {
          "id": "gvJYxh53ckvIJCGJ",
          "name": "Webhook Header Auth account"
        },
        "httpBearerAuth": {
          "id": "rTr5dGV3t69NsU43",
          "name": "Firecrawl API Bearer Auth"
        }
      }
    },
    {
      "parameters": {
        "url": "={{ $json.url }}",
        "options": {}
      },
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.2,
      "position": [
        0,
        0
      ],
      "id": "696a5b84-67ec-4cdc-845d-8e1e39707eb6",
      "name": "HTTP Request2"
    },
    {
      "parameters": {
        "html": "={{ $('HTTP Request2').item.json.data }}",
        "destinationKey": "data.markdown",
        "options": {}
      },
      "type": "n8n-nodes-base.markdown",
      "typeVersion": 1,
      "position": [
        464,
        0
      ],
      "id": "5b4c4929-42c7-4f9a-b991-a8543ca88e0c",
      "name": "Markdown"
    },
    {
      "parameters": {
        "url": "=https://youtube-transcript3.p.rapidapi.com/api/transcript?videoId={{ $json.id }}",
        "authentication": "genericCredentialType",
        "genericAuthType": "httpHeaderAuth",
        "sendQuery": true,
        "queryParameters": {
          "parameters": [
            {
              "name": "flat_text",
              "value": "true"
            }
          ]
        },
        "sendHeaders": true,
        "headerParameters": {
          "parameters": [
            {
              "name": "x-rapidapi-host",
              "value": "youtube-transcript3.p.rapidapi.com"
            }
          ]
        },
        "options": {}
      },
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.2,
      "position": [
        352,
        528
      ],
      "id": "c3cc0c5a-af67-48e6-be56-b19e39d6e7df",
      "name": "HTTP Request3",
      "credentials": {
        "httpHeaderAuth": {
          "id": "1RS4kv8N7yVsj9fN",
          "name": "RapidAPI YouTube Transcript Header Auth"
        }
      }
    },
    {
      "parameters": {
        "rules": {
          "values": [
            {
              "conditions": {
                "options": {
                  "caseSensitive": true,
                  "leftValue": "",
                  "typeValidation": "strict",
                  "version": 2
                },
                "conditions": [
                  {
                    "id": "4c4d6c34-5191-486e-8f86-9d7f8b3ae377",
                    "leftValue": "={{ $json.url }}",
                    "rightValue": "linkedin.com",
                    "operator": {
                      "type": "string",
                      "operation": "contains"
                    }
                  }
                ],
                "combinator": "and"
              },
              "renameOutput": true,
              "outputKey": "LinkedIn"
            },
            {
              "conditions": {
                "options": {
                  "caseSensitive": true,
                  "leftValue": "",
                  "typeValidation": "strict",
                  "version": 2
                },
                "conditions": [
                  {
                    "id": "cf099449-5add-49b5-8864-33c13c6c6d28",
                    "leftValue": "={{ $json.url }}",
                    "rightValue": "mobiledevmemo.com",
                    "operator": {
                      "type": "string",
                      "operation": "contains"
                    }
                  }
                ],
                "combinator": "and"
              },
              "renameOutput": true,
              "outputKey": "MobileDevMemo"
            },
            {
              "conditions": {
                "options": {
                  "caseSensitive": true,
                  "leftValue": "",
                  "typeValidation": "strict",
                  "version": 2
                },
                "conditions": [
                  {
                    "leftValue": "={{ $json.url }}",
                    "rightValue": "youtube.com",
                    "operator": {
                      "type": "string",
                      "operation": "contains"
                    },
                    "id": "862b6ee6-e41a-4002-b823-1885262ceb60"
                  }
                ],
                "combinator": "and"
              },
              "renameOutput": true,
              "outputKey": "Youtube"
            },
            {
              "conditions": {
                "options": {
                  "caseSensitive": true,
                  "leftValue": "",
                  "typeValidation": "strict",
                  "version": 2
                },
                "conditions": [
                  {
                    "id": "822e14ae-b3fa-4429-a2d9-b39356dfb305",
                    "leftValue": "={{ $json.url }}",
                    "rightValue": "",
                    "operator": {
                      "type": "string",
                      "operation": "exists",
                      "singleValue": true
                    }
                  }
                ],
                "combinator": "and"
              },
              "renameOutput": true,
              "outputKey": "Other"
            }
          ]
        },
        "options": {}
      },
      "type": "n8n-nodes-base.switch",
      "typeVersion": 3.2,
      "position": [
        -304,
        224
      ],
      "id": "d13b463a-ffef-4975-ac57-26431fcde751",
      "name": "URL Switch"
    },
    {
      "parameters": {
        "method": "POST",
        "url": "https://api.firecrawl.dev/v1/scrape",
        "authentication": "genericCredentialType",
        "genericAuthType": "httpBearerAuth",
        "sendBody": true,
        "specifyBody": "json",
        "jsonBody": "={\n  \"url\": \"{{ $json.url }}\",\n  \"formats\": [\n    \"markdown\"\n  ],\n  \"onlyMainContent\": true,\n  \"waitFor\": 5000,\n  \"headers\": {\n    \"cookie\": \"wordpress_test_cookie=WP%20Cookie%20check;__stripe_mid=1713fb77-d9c5-4914-97e4-a68f5284dd22420b17;wordpress_logged_in_240259a5d3f6770f12e9bf70696c0c0d=marcknoll%40gmail.com%7C1754858972%7C2pYgDpHT06xhNeSL359ii6UBepO66sYM7FfAUr7VlJn%7C17f4fbcbb58324a8872a5a8252d25f7d2c8cb10ce38684f14189508c6be67581\"\n  }\n}",
        "options": {}
      },
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.2,
      "position": [
        0,
        160
      ],
      "id": "be035018-78e7-485e-bc8b-d89730a741fd",
      "name": "HTTP Mobile Dev Memo",
      "credentials": {
        "httpBearerAuth": {
          "id": "rTr5dGV3t69NsU43",
          "name": "Firecrawl API Bearer Auth"
        }
      }
    },
    {
      "parameters": {
        "jsCode": "// get the raw URL string\nconst urlString = $json.url;\nlet videoId = '';\n\n// try native parser first\ntry {\n  const url = new URL(urlString);\n  \n  // Check for v= query parameter\n  videoId = url.searchParams.get('v');\n  \n  // If no query parameter, check for path-based formats like /live/, /embed/, /shorts/\n  if (!videoId) {\n    const pathMatch = url.pathname.match(/^\\/(live|embed|v|shorts)\\/([A-Za-z0-9_-]{11})/);\n    if (pathMatch) {\n      videoId = pathMatch[2];\n    }\n  }\n} catch (e) {\n  // fallback to regex for the entire URL string\n  const m = urlString.match(/(?:v=|youtu\\.be\\/|\\/live\\/|\\/embed\\/|\\/v\\/|\\/shorts\\/)([A-Za-z0-9_-]{11})/);\n  if (m) videoId = m[1];\n}\n\n// output new item with videoId\nreturn [{ json: { videoId } }];"
      },
      "type": "n8n-nodes-base.code",
      "typeVersion": 2,
      "position": [
        0,
        528
      ],
      "id": "63a99427-d7f3-4692-a04e-f1067acde4c5",
      "name": "Code"
    },
    {
      "parameters": {
        "promptType": "define",
        "text": "=You are provided below with markdown content from a LinkedIn post URL retrieved via HTTP request. Extract only the primary human-authored content and the following metadata: author, linkedin post url, publishing date. Important: Remove any double quotation marks in the main content!\n\nUse this response structure exactly:\n\n\nwebsite_name: LinkedIn\nlinkedin_post_author: [the author name of the linkedin post]\nlinkedin_post_url: [the linkedin post url]\nlinkedin_post_content\": [The main LinkedIn post content]\n\nDo not include any additional text, explanations, or commentary and no double quotation marks.\n\nUse empty strings (\"\") for any values that cannot be retrieved.\n\nHere is the content:\n{{ $json.data.markdown }}\n\nHere is the linkedin url:\n{{ $json.linkedin_url }}",
        "batching": {}
      },
      "type": "@n8n/n8n-nodes-langchain.chainLlm",
      "typeVersion": 1.7,
      "position": [
        640,
        0
      ],
      "id": "b60144a3-13fe-4c21-bb24-7b85d86139e3",
      "name": "Basic LLM Chain1"
    },
    {
      "parameters": {
        "jsCode": "return items.map(item => {\n  // grab the field you want to truncate; adjust “text” to match your property\n  const inputText = $input.first().json.data || \"\";\n\n  // take only the first 500 characters\n  const truncated = inputText.substring(0, 2500);\n\n  // return it however you need downstream; here we overwrite the payload:\n  return {\n    json: {\n      truncated_text: truncated\n    }\n  };\n});"
      },
      "type": "n8n-nodes-base.code",
      "typeVersion": 2,
      "position": [
        160,
        0
      ],
      "id": "f33423ab-b963-4168-bed1-f406f3f4b05a",
      "name": "Code2"
    },
    {
      "parameters": {
        "jsCode": "return items.map(item => {\n  // grab the raw HTML/text\n  const text = $input.first().json.truncated_text || '';\n\n  // regex to capture the URL inside <link rel=\"canonical\" href=\"…\">\n  const match = text.match(/<link\\s+rel=[\"']canonical[\"']\\s+href=[\"']([^\"']+)[\"']/i);\n  const canonicalUrl = match ? match[1] : '';\n\n  // return just the URL (or include other fields as needed)\n  return {\n    json: {\n      linkedin_url: canonicalUrl\n    }\n  };\n});"
      },
      "type": "n8n-nodes-base.code",
      "typeVersion": 2,
      "position": [
        304,
        0
      ],
      "id": "8a866b38-e263-44c9-8735-4cc231ba502e",
      "name": "Code3"
    },
    {
      "parameters": {
        "assignments": {
          "assignments": [
            {
              "id": "55126e1e-5068-44fe-b3d4-b3ed6edb1107",
              "name": "website_name",
              "value": "={{ $('HTTP Request').item.json.data.metadata['og:site_name'] }}",
              "type": "string"
            },
            {
              "id": "03e33403-19eb-4e55-abdf-3598fca6646f",
              "name": "title",
              "value": "={{ $('HTTP Request').item.json.data.metadata['og:title'] }}",
              "type": "string"
            },
            {
              "id": "9d721a32-f8b8-4840-aa55-9e6165c24aef",
              "name": "publishing_date",
              "value": "={{ $('HTTP Request').item.json.data.metadata.publishedTime }}",
              "type": "string"
            },
            {
              "id": "2575f231-cae4-49f3-8e76-7ea09cae2223",
              "name": "url",
              "value": "={{ $('HTTP Request').item.json.data.metadata.ogUrl }}",
              "type": "string"
            },
            {
              "id": "22cb3c11-8fe8-43d7-8e6f-47eaf41ac458",
              "name": "image_url",
              "value": "={{ $('HTTP Request').item.json.data.metadata.ogImage }}",
              "type": "string"
            },
            {
              "id": "958d520b-9156-416f-b04c-76ea6e0dd502",
              "name": "description",
              "value": "={{ $('HTTP Request').item.json.data.metadata.ogDescription }}",
              "type": "string"
            },
            {
              "id": "d25f0ca6-2444-45fe-9b10-54df02e6d41b",
              "name": "url_content",
              "value": "={{ $json.data.markdown }}",
              "type": "string"
            }
          ]
        },
        "options": {}
      },
      "type": "n8n-nodes-base.set",
      "typeVersion": 3.4,
      "position": [
        512,
        352
      ],
      "id": "81c753a1-d0df-4c83-a869-b995e326b390",
      "name": "Edit Fields"
    },
    {
      "parameters": {
        "assignments": {
          "assignments": [
            {
              "id": "55126e1e-5068-44fe-b3d4-b3ed6edb1107",
              "name": "website_name",
              "value": "={{ $('HTTP Mobile Dev Memo').item.json.data.metadata.ogSiteName }}",
              "type": "string"
            },
            {
              "id": "03e33403-19eb-4e55-abdf-3598fca6646f",
              "name": "title",
              "value": "={{ $('HTTP Mobile Dev Memo').item.json.data.metadata.ogTitle }}",
              "type": "string"
            },
            {
              "id": "9d721a32-f8b8-4840-aa55-9e6165c24aef",
              "name": "publishing_date",
              "value": "={{ $('HTTP Mobile Dev Memo').item.json.data.metadata.publishedTime }}",
              "type": "string"
            },
            {
              "id": "2575f231-cae4-49f3-8e76-7ea09cae2223",
              "name": "url",
              "value": "={{ $('HTTP Mobile Dev Memo').item.json.data.metadata.ogUrl }}",
              "type": "string"
            },
            {
              "id": "22cb3c11-8fe8-43d7-8e6f-47eaf41ac458",
              "name": "image_url",
              "value": "={{ $('HTTP Mobile Dev Memo').item.json.data.metadata['og:image'] }}",
              "type": "string"
            },
            {
              "id": "958d520b-9156-416f-b04c-76ea6e0dd502",
              "name": "description",
              "value": "={{ $('HTTP Mobile Dev Memo').item.json.data.metadata['og:description'] }}",
              "type": "string"
            },
            {
              "id": "d25f0ca6-2444-45fe-9b10-54df02e6d41b",
              "name": "url_content",
              "value": "={{ $json.data.markdown }}",
              "type": "string"
            }
          ]
        },
        "options": {}
      },
      "type": "n8n-nodes-base.set",
      "typeVersion": 3.4,
      "position": [
        512,
        160
      ],
      "id": "3469be4a-6233-4293-adea-75371be95cf1",
      "name": "Edit Fields1"
    },
    {
      "parameters": {
        "resource": "video",
        "operation": "get",
        "videoId": "={{ $json.videoId }}",
        "options": {}
      },
      "type": "n8n-nodes-base.youTube",
      "typeVersion": 1,
      "position": [
        192,
        528
      ],
      "id": "2ae8de7a-ee06-428d-8be3-d311646a77e4",
      "name": "YouTube",
      "credentials": {
        "youTubeOAuth2Api": {
          "id": "gxKHLaj7ditcfrYR",
          "name": "YouTube account"
        }
      }
    },
    {
      "parameters": {
        "assignments": {
          "assignments": [
            {
              "id": "55126e1e-5068-44fe-b3d4-b3ed6edb1107",
              "name": "website_name",
              "value": "={{ $('YouTube').item.json.snippet.channelTitle }}",
              "type": "string"
            },
            {
              "id": "03e33403-19eb-4e55-abdf-3598fca6646f",
              "name": "title",
              "value": "={{ $('YouTube').item.json.snippet.title }}",
              "type": "string"
            },
            {
              "id": "9d721a32-f8b8-4840-aa55-9e6165c24aef",
              "name": "publishing_date",
              "value": "={{ $('YouTube').item.json.snippet.publishedAt }}",
              "type": "string"
            },
            {
              "id": "2575f231-cae4-49f3-8e76-7ea09cae2223",
              "name": "url",
              "value": "=https://www.youtube.com/watch?v={{ $('YouTube').item.json.id }}",
              "type": "string"
            },
            {
              "id": "22cb3c11-8fe8-43d7-8e6f-47eaf41ac458",
              "name": "image_url",
              "value": "={{ $('YouTube').item.json.snippet.thumbnails.standard.url }}",
              "type": "string"
            },
            {
              "id": "958d520b-9156-416f-b04c-76ea6e0dd502",
              "name": "description",
              "value": "={{ $('YouTube').item.json.snippet.description }}",
              "type": "string"
            },
            {
              "id": "d25f0ca6-2444-45fe-9b10-54df02e6d41b",
              "name": "url_content",
              "value": "={{ $json.transcript }}",
              "type": "string"
            }
          ]
        },
        "options": {}
      },
      "type": "n8n-nodes-base.set",
      "typeVersion": 3.4,
      "position": [
        512,
        528
      ],
      "id": "a23ce8f6-d852-4052-a448-bc0e2ecf4b3f",
      "name": "Edit Fields2"
    },
    {
      "parameters": {
        "workflowInputs": {
          "values": [
            {
              "name": "url"
            },
            {
              "name": "userId"
            }
          ]
        }
      },
      "type": "n8n-nodes-base.executeWorkflowTrigger",
      "typeVersion": 1.1,
      "position": [
        -688,
        240
      ],
      "id": "3df318c0-0574-451f-908b-1f2a59c9e7fe",
      "name": "When Executed by Another Workflow"
    },
    {
      "parameters": {
        "options": {}
      },
      "type": "@n8n/n8n-nodes-langchain.lmChatGoogleGemini",
      "typeVersion": 1,
      "position": [
        704,
        -144
      ],
      "id": "12285a87-7fcc-43ea-8c6a-90a268f0901e",
      "name": "Google Gemini Chat Model1",
      "credentials": {
        "googlePalmApi": {
          "id": "0Cl9BqX4cx9pQwrD",
          "name": "Google Gemini(PaLM) Api account"
        }
      }
    },
    {
      "parameters": {
        "options": {}
      },
      "type": "@n8n/n8n-nodes-langchain.chatTrigger",
      "typeVersion": 1.1,
      "position": [
        -864,
        448
      ],
      "id": "ad53c4aa-12d6-4bac-9439-729d7ea166b6",
      "name": "When chat message received",
      "webhookId": "97f8159d-90fe-4eab-bc68-48b1669d8307"
    },
    {
      "parameters": {
        "assignments": {
          "assignments": [
            {
              "id": "13c14019-e51a-4201-bd0b-701352ce1c85",
              "name": "url",
              "value": "={{ $json.chatInput }}",
              "type": "string"
            }
          ]
        },
        "options": {}
      },
      "type": "n8n-nodes-base.set",
      "typeVersion": 3.4,
      "position": [
        -640,
        448
      ],
      "id": "d8f05d24-27bf-4320-8ee5-ff6c24b77269",
      "name": "Edit Fields3"
    },
    {
      "parameters": {
        "assignments": {
          "assignments": [
            {
              "id": "55126e1e-5068-44fe-b3d4-b3ed6edb1107",
              "name": "website_name",
              "value": "=LinkedIn",
              "type": "string"
            },
            {
              "id": "03e33403-19eb-4e55-abdf-3598fca6646f",
              "name": "title",
              "value": "=",
              "type": "string"
            },
            {
              "id": "9d721a32-f8b8-4840-aa55-9e6165c24aef",
              "name": "publishing_date",
              "value": "=",
              "type": "string"
            },
            {
              "id": "2575f231-cae4-49f3-8e76-7ea09cae2223",
              "name": "url",
              "value": "={{ $('When Executed by Another Workflow').item.json.url }}",
              "type": "string"
            },
            {
              "id": "22cb3c11-8fe8-43d7-8e6f-47eaf41ac458",
              "name": "image_url",
              "value": "=",
              "type": "string"
            },
            {
              "id": "958d520b-9156-416f-b04c-76ea6e0dd502",
              "name": "description",
              "value": "=",
              "type": "string"
            },
            {
              "id": "d25f0ca6-2444-45fe-9b10-54df02e6d41b",
              "name": "url_content",
              "value": "={{ $json.text }}",
              "type": "string"
            }
          ]
        },
        "options": {}
      },
      "type": "n8n-nodes-base.set",
      "typeVersion": 3.4,
      "position": [
        992,
        0
      ],
      "id": "bb6769ba-0c0d-493c-baa5-d2187f6314c5",
      "name": "Edit Fields7"
    },
    {
      "parameters": {
        "model": {
          "__rl": true,
          "value": "gpt-5-mini",
          "mode": "list",
          "cachedResultName": "gpt-5-mini"
        },
        "options": {}
      },
      "type": "@n8n/n8n-nodes-langchain.lmChatOpenAi",
      "typeVersion": 1.2,
      "position": [
        704,
        80
      ],
      "id": "d30b5e52-7068-4cba-8e7f-c4269e14d977",
      "name": "OpenAI Chat Model",
      "credentials": {
        "openAiApi": {
          "id": "vyxVe2RGE1yLgSDx",
          "name": "OpenAi account"
        }
      }
    }
  ],
  "pinData": {
    "When Executed by Another Workflow": [
      {
        "json": {
          "url": "https://www.youtube.com/live/nm2RngDr2AY",
          "userId": "ae11b2ca-64c9-4e82-a820-ab3b6a25f9e4"
        }
      }
    ]
  },
  "connections": {
    "HTTP Request": {
      "main": [
        [
          {
            "node": "Edit Fields",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "HTTP Request2": {
      "main": [
        [
          {
            "node": "Code2",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Markdown": {
      "main": [
        [
          {
            "node": "Basic LLM Chain1",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "HTTP Request3": {
      "main": [
        [
          {
            "node": "Edit Fields2",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "URL Switch": {
      "main": [
        [
          {
            "node": "HTTP Request2",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "HTTP Mobile Dev Memo",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "Code",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "HTTP Request",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "HTTP Mobile Dev Memo": {
      "main": [
        [
          {
            "node": "Edit Fields1",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Code": {
      "main": [
        [
          {
            "node": "YouTube",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Basic LLM Chain1": {
      "main": [
        [
          {
            "node": "Edit Fields7",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Code2": {
      "main": [
        [
          {
            "node": "Code3",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Code3": {
      "main": [
        [
          {
            "node": "Markdown",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "YouTube": {
      "main": [
        [
          {
            "node": "HTTP Request3",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "When Executed by Another Workflow": {
      "main": [
        [
          {
            "node": "URL Switch",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Google Gemini Chat Model1": {
      "ai_languageModel": [
        []
      ]
    },
    "When chat message received": {
      "main": [
        [
          {
            "node": "Edit Fields3",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Edit Fields3": {
      "main": [
        [
          {
            "node": "URL Switch",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "OpenAI Chat Model": {
      "ai_languageModel": [
        [
          {
            "node": "Basic LLM Chain1",
            "type": "ai_languageModel",
            "index": 0
          }
        ]
      ]
    }
  },
  "active": true,
  "settings": {
    "executionOrder": "v1"
  },
  "versionId": "833f02e2-5e2e-44f1-a4aa-d4a10373bc87",
  "meta": {
    "templateCredsSetupCompleted": true,
    "instanceId": "f5707d3666ba184efe554775a181f51837c332c4fa57af1133598e1ba699e314"
  },
  "id": "vywdIMxM4CtV7SyK",
  "tags": []
}